{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Auth\\\\EmailOTPscreen.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useNavigation } from \"../../utils/useNavigation\";\nimport axios from 'axios';\nimport { cansa } from \"../../consts/Selector\";\nexport default function EmailOTPscreen() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailValdate = _useState2[0],\n      setEmailValdate = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var valiDate = function valiDate(text, type) {\n    var emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n    if (type == 'email') {\n      if (emailRegex.test(text)) {\n        setEmailValdate(true);\n        setEmail(text);\n      } else {\n        setEmailValdate(false);\n      }\n    }\n  };\n\n  var continueBtn = function continueBtn() {\n    if (email != '') {\n      axios.get(cansa[1] + \"/api/user/forgot/password/\" + email).then(function (res) {\n        Alert.alert('Thông Báo', res.data.message);\n        navigate('OTPscreen', {\n          email: email\n        });\n      });\n    } else {\n      Alert.alert('Thông báo', 'Email không được để trống!!');\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.up,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-speedometer\",\n    size: 100,\n    color: 'rgb(221, 97, 97)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Email OTP Code\"), React.createElement(Text, {\n    style: {\n      color: 'rgb(221, 97, 97)',\n      fontSize: 15,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"We will send 4 digits code to your email for the verifiction\")), React.createElement(View, {\n    style: styles.down,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.textInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginRight: 285,\n      color: 'rgb(221, 97, 97)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Email:\"), React.createElement(TextInput, {\n    style: [styles.textInput, !emailValdate ? styles.error : null],\n    onChangeText: function onChangeText(text) {\n      return valiDate(text, 'email');\n    },\n    textContentType: \"emailAddress\",\n    keyboardType: 'email-address',\n    placeholder: \"Enter your email !\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: continueBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Continue\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: '#33FF99'\n  },\n  up: {\n    flex: 4,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  down: {\n    flex: 6,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  textInputContainer: {\n    width: '100%',\n    height: '30%',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  textInput: {\n    width: '80%',\n    height: 45,\n    borderBottomWidth: 1\n  },\n  title: {\n    color: 'rgb(255,119,34)',\n    textAlign: 'center',\n    width: 400,\n    fontSize: 30\n  },\n  loginButton: {\n    width: 300,\n    height: 45,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgb(221, 97, 97)'\n  },\n  loginButtonTitle: {\n    fontSize: 18,\n    color: 'white'\n  },\n  iconEmail: {\n    position: 'absolute',\n    top: 75,\n    left: 30\n  },\n  error: {\n    borderColor: 'red',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Auth/EmailOTPscreen.tsx"],"names":["React","useState","Ionicons","useNavigation","axios","cansa","EmailOTPscreen","navigate","emailValdate","setEmailValdate","email","setEmail","valiDate","text","type","emailRegex","test","continueBtn","get","then","res","Alert","alert","data","message","Keyboard","dismiss","styles","container","up","title","color","fontSize","marginTop","down","textInputContainer","marginRight","textInput","error","loginButton","loginButtonTitle","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","width","height","alignSelf","alignContent","borderBottomWidth","textAlign","borderRadius","iconEmail","position","top","left","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    Alert,\r\n    Keyboard,\r\n} from 'react-native'\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\nimport { useNavigation } from '../../utils/useNavigation'\r\nimport axios from 'axios'\r\nimport { cansa } from '../../consts/Selector'\r\n\r\nexport default function EmailOTPscreen() {\r\n\r\n    const { navigate } = useNavigation();\r\n    const [emailValdate, setEmailValdate] = useState(true)\r\n    const [email, setEmail] = useState('')\r\n    const valiDate = (text: any, type: any) => {\r\n        const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n        if (type == 'email') {\r\n            if (emailRegex.test(text)) {\r\n                setEmailValdate(true)\r\n                setEmail(text)\r\n            }\r\n            else {\r\n                setEmailValdate(false)\r\n            }\r\n        }\r\n    }\r\n    const continueBtn = () => {\r\n        if (email != '') {\r\n            axios.get(`${cansa[1]}/api/user/forgot/password/${email}`).then((res)=>{\r\n                Alert.alert('Thông Báo',res.data.message);\r\n                navigate('OTPscreen',{email:email})\r\n            }) \r\n        } else {\r\n            Alert.alert('Thông báo', 'Email không được để trống!!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.container}>\r\n                <View style={styles.up}>\r\n                    <Ionicons\r\n                        name=\"ios-speedometer\"\r\n                        size={100}\r\n                        color={'rgb(221, 97, 97)'}>\r\n                    </Ionicons>\r\n                    <Text style={styles.title}>\r\n                        Email OTP Code\r\n                    </Text>\r\n                    <Text style={{ color: 'rgb(221, 97, 97)', fontSize: 15, marginTop: 10 }}>\r\n                        We will send 4 digits code to your email for the verifiction\r\n                    </Text>\r\n                </View>\r\n                <View style={styles.down}>\r\n                    <View style={styles.textInputContainer}>\r\n\r\n                        <Text style={{ fontSize: 18, marginRight: 285, color: 'rgb(221, 97, 97)' }}>Email:</Text>\r\n                        <TextInput\r\n                            style={[styles.textInput, !emailValdate ? styles.error : null]}\r\n                            onChangeText={(text) => valiDate(text, 'email')}\r\n                            textContentType='emailAddress'\r\n                            keyboardType={'email-address'}\r\n                            placeholder=\"Enter your email !\"\r\n                        >\r\n                        </TextInput>\r\n\r\n                    </View>\r\n                    <TouchableOpacity style={styles.loginButton}\r\n                        onPress={continueBtn}\r\n                    >\r\n                        <Text style={styles.loginButtonTitle}>Continue</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n        backgroundColor: '#33FF99'\r\n    },\r\n    up: {\r\n        flex: 4,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    down: {\r\n        flex: 6,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    textInputContainer: {\r\n        width: '100%',\r\n        height: '30%',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    textInput: {\r\n        width: '80%',\r\n        height: 45,\r\n        borderBottomWidth: 1\r\n\r\n    },\r\n    title: {\r\n        color: 'rgb(255,119,34)',\r\n        textAlign: 'center',\r\n        width: 400,\r\n        fontSize: 30\r\n    },\r\n    loginButton: {\r\n        width: 300,\r\n        height: 45,\r\n        borderRadius: 6,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgb(221, 97, 97)'\r\n    },\r\n    loginButtonTitle: {\r\n        fontSize: 18,\r\n        color: 'white'\r\n\r\n    },\r\n    iconEmail: {\r\n        position: 'absolute',\r\n        top: 75,\r\n        left: 30\r\n    },\r\n    error: {\r\n        borderColor: 'red',\r\n        borderWidth: 1\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}