{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\natsw\\\\Desktop\\\\Mobile\\\\CDTN-2\\\\src\\\\screens\\\\Account.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Accessory, Avatar, Button } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport moment from 'moment';\nvar user_temp = {\n  \"id\": 1,\n  \"phone\": \"0968241064\",\n  \"name\": \"anh\",\n  \"birthday\": \"1999-09-28T17:00:00.000Z\"\n};\nexport default function Account() {\n  var _useState = useState('https://i.ibb.co/hYjK44F/anise-aroma-art-bazaar-277253.jpg'),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var checkLogin = function checkLogin() {\n    setUser(!user);\n  };\n\n  function changDate(dateObj) {\n    var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"Sep\", \"October\", \"November\", \"December\"];\n    var month = monthNames[dateObj.getMonth()];\n    var day = String(dateObj.getDate()).padStart(2, '0');\n    var year = dateObj.getFullYear();\n    var output = month + '\\n' + day + ',' + year;\n    return output;\n  }\n\n  var getImg = function getImg() {\n    var result;\n    return _regeneratorRuntime.async(function getImg$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [3, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (user) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, React.createElement(Avatar, {\n      rounded: true,\n      size: \"xlarge\",\n      source: {\n        uri: image\n      },\n      onPress: getImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, React.createElement(Accessory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"User name: \", user_temp.name), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"User phone: \", user_temp.phone), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"User birthday: \", moment.utc(user_temp.birthday).format('DD/MM/YYYY')), React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      title: \"Logout\",\n      type: \"outline\",\n      onPress: checkLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      title: \"edit\",\n      type: \"outline\",\n      onPress: checkLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      title: \"Login\",\n      type: \"outline\",\n      onPress: checkLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/natsw/Desktop/Mobile/CDTN-2/src/screens/Account.tsx"],"names":["React","useEffect","useState","Accessory","Avatar","Button","ImagePicker","moment","user_temp","Account","image","setImage","user","setUser","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","checkLogin","changDate","dateObj","monthNames","month","getMonth","day","String","getDate","padStart","year","getFullYear","output","getImg","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","styles","container","name","phone","utc","birthday","format","flexDirection","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, Platform } from 'react-native';\r\nimport { Accessory, Avatar, Button } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport moment from 'moment';\r\n\r\nlet user_temp = {\r\n    \"id\": 1,\r\n    \"phone\": \"0968241064\",\r\n    \"name\": \"anh\",\r\n    \"birthday\": \"1999-09-28T17:00:00.000Z\"\r\n}\r\n\r\nexport default function Account() {\r\n    const [image, setImage] = useState('https://i.ibb.co/hYjK44F/anise-aroma-art-bazaar-277253.jpg');\r\n    const [user, setUser] = useState(false);\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (Platform.OS !== 'web') {\r\n                const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n                if (status !== 'granted') {\r\n                    alert('Sorry, we need camera roll permissions to make this work!');\r\n                }\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    let checkLogin = () => {\r\n        setUser(!user);\r\n    }\r\n\r\n    function changDate(dateObj: Date) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"Sep\", \"October\", \"November\", \"December\"];\r\n        const month = monthNames[dateObj.getMonth()];\r\n        const day = String(dateObj.getDate()).padStart(2, '0');\r\n        const year = dateObj.getFullYear();\r\n        const output = month + '\\n' + day + ',' + year;\r\n        return output;\r\n    }\r\n\r\n    let getImg = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [3, 3],\r\n            quality: 1,\r\n        });\r\n\r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n        }\r\n    };\r\n    if (user) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Avatar\r\n                    rounded\r\n                    size=\"xlarge\"\r\n                    source={{\r\n                        uri: image,\r\n                    }}\r\n                    onPress={getImg}\r\n                >\r\n                    <Accessory></Accessory>\r\n                </Avatar>\r\n                <Text>User name: {user_temp.name}</Text>\r\n                <Text>User phone: {user_temp.phone}</Text>\r\n                <Text>User birthday: { moment.utc(user_temp.birthday).format('DD/MM/YYYY')}</Text>\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <Button\r\n                        title=\"Logout\"\r\n                        type=\"outline\"\r\n                        onPress={checkLogin}\r\n                    />\r\n                    <Button\r\n                        title=\"edit\"\r\n                        type=\"outline\"\r\n                        onPress={checkLogin}\r\n                    />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Button\r\n                    title=\"Login\"\r\n                    type=\"outline\"\r\n                    onPress={checkLogin}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}