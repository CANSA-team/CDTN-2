{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Auth\\\\ChangePassword.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport axios from 'axios';\nimport { useNavigation } from \"../../utils/useNavigation\";\nimport { cansa } from \"../../consts/Selector\";\nexport default function ChangePassword(props) {\n  var _this = this;\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordValdate = _useState4[0],\n      setPasswordValdate = _useState4[1];\n\n  var navigation = props.navigation,\n      route = props.route;\n  var getParam = navigation.getParam,\n      goBack = navigation.goBack;\n\n  var valiDate = function valiDate(text, type) {\n    var passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\n\n    if (type == 'password') {\n      if (passwordRegex.test(text)) {\n        setPassword(text);\n        setPasswordValdate(true);\n        console.warn('Password hợp lệ');\n      } else {\n        setPasswordValdate(false);\n        console.warn('Password chưa hợp lệ gồm 6 kí tự ,chữ cái hoa đầu');\n      }\n    }\n  };\n\n  var changePasswordBtn = function changePasswordBtn() {\n    var email = getParam('email');\n\n    if (password) {\n      axios.get(cansa[1] + \"/api/user/forgot/password/center/\" + email + \"/\" + password).then(function (res) {\n        if (res.data.data) {\n          Alert.alert('Thông Báo', res.data.message);\n          navigate('Login');\n        } else {\n          Alert.alert('Thông Báo', res.data.message);\n        }\n      });\n    } else {\n      Alert.alert('Thông báo', 'Email không giống nhau hoặc không đúng định dạng!!');\n    }\n  };\n\n  var Divider = function Divider(props) {\n    return React.createElement(View, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }), React.createElement(View, {\n      style: styles.line,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.textOR,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"OR\"), React.createElement(View, {\n      style: styles.line,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.up,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-speedometer\",\n    size: 100,\n    color: 'rgb(221, 97, 97)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Change Password\")), React.createElement(View, {\n    style: styles.down,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.textInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: [styles.textInput, !passwordValdate ? styles.error : null],\n    onChangeText: function onChangeText(text) {\n      return valiDate(text, 'password');\n    },\n    placeholder: \"Import password new\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.textInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: [styles.textInput, !passwordValdate ? styles.error : null],\n    onChangeText: function onChangeText(text) {\n      return valiDate(text, 'password');\n    },\n    placeholder: \"Confirm password new\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.retrievalButton,\n    onPress: changePasswordBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.retrievalButtonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Recuperate\")), React.createElement(Divider, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.forgotButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Have an account? Sign In\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: '#33FF99'\n  },\n  up: {\n    flex: 3,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  down: {\n    flex: 7,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  title: {\n    color: 'rgb(255,119,34)',\n    textAlign: 'center',\n    width: 400,\n    fontSize: 23\n  },\n  textInputContainer: {\n    paddingHorizontal: 10,\n    borderRadius: 6,\n    marginBottom: 20,\n    backgroundColor: 'rgba(255,255,255,0.2)'\n  },\n  textInput: {\n    width: 280,\n    height: 45\n  },\n  retrievalButton: {\n    width: 300,\n    height: 45,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    backgroundColor: 'rgb(221, 97, 97)'\n  },\n  retrievalButtonTitle: {\n    fontSize: 18,\n    color: 'white'\n  },\n  line: {\n    height: 1,\n    flex: 2,\n    backgroundColor: 'black'\n  },\n  textOR: {\n    flex: 1,\n    textAlign: 'center'\n  },\n  divider: {\n    flexDirection: 'row',\n    height: 40,\n    width: 298,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotButton: {},\n  navButtonText: {\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 15,\n    color: '#3b5998'\n  },\n  error: {\n    borderColor: 'red',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Auth/ChangePassword.tsx"],"names":["React","useState","Ionicons","axios","useNavigation","cansa","ChangePassword","props","navigate","password","setPassword","passwordValdate","setPasswordValdate","navigation","route","getParam","goBack","valiDate","text","type","passwordRegex","test","console","warn","changePasswordBtn","email","get","then","res","data","Alert","alert","message","Divider","styles","line","textOR","Keyboard","dismiss","container","up","title","down","textInputContainer","textInput","error","retrievalButton","retrievalButtonTitle","divider","forgotButton","navButtonText","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","color","textAlign","width","fontSize","paddingHorizontal","borderRadius","marginBottom","height","marginTop","borderColor","borderWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;;;;;;;AAWA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,SAASC,KAAT;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAmC;AAAA;;AAC9C,uBAAqBH,aAAa,EAAlC;AAAA,MAAQI,QAAR,kBAAQA,QAAR;;AACA,kBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8CT,QAAQ,CAAC,IAAD,CAAtD;AAAA;AAAA,MAAOU,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAOC,UAAP,GAA2BN,KAA3B,CAAOM,UAAP;AAAA,MAAkBC,KAAlB,GAA2BP,KAA3B,CAAkBO,KAAlB;AACA,MAAQC,QAAR,GAA6BF,UAA7B,CAAQE,QAAR;AAAA,MAAkBC,MAAlB,GAA6BH,UAA7B,CAAkBG,MAAlB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAYC,IAAZ,EAA0B;AACvC,QAAMC,aAAa,GAAG,wCAAtB;;AACA,QAAID,IAAI,IAAI,UAAZ,EAAwB;AACpB,UAAIC,aAAa,CAACC,IAAd,CAAmBH,IAAnB,CAAJ,EAA8B;AAC1BR,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACAN,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAU,QAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACH,OAJD,MAKK;AACDX,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAU,QAAAA,OAAO,CAACC,IAAR,CAAa,mDAAb;AACH;AACJ;AACJ,GAbD;;AAcA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAI;AAC1B,QAAIC,KAAK,GAAGV,QAAQ,CAAC,OAAD,CAApB;;AACA,QAAGN,QAAH,EAAY;AACRN,MAAAA,KAAK,CAACuB,GAAN,CAAarB,KAAK,CAAC,CAAD,CAAlB,yCAAyDoB,KAAzD,SAAkEhB,QAAlE,EAA8EkB,IAA9E,CAAmF,UAACC,GAAD,EAAO;AACtF,YAAGA,GAAG,CAACC,IAAJ,CAASA,IAAZ,EAAiB;AACbC,UAAAA,KAAK,CAACC,KAAN,CAAY,WAAZ,EAAwBH,GAAG,CAACC,IAAJ,CAASG,OAAjC;AACAxB,UAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,SAHD,MAGK;AACDsB,UAAAA,KAAK,CAACC,KAAN,CAAY,WAAZ,EAAwBH,GAAG,CAACC,IAAJ,CAASG,OAAjC;AACH;AACJ,OAPD;AAQH,KATD,MASK;AACDF,MAAAA,KAAK,CAACC,KAAN,CAAY,WAAZ,EAAyB,oDAAzB;AAEH;AAEJ,GAhBD;;AAiBA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAAC1B,KAAD,EAAgB;AAC5B,WAAO,oBAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE2B,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAEH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAGH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHG,CAAP;AAKH,GAND;;AAOA,SAEI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEE,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,IAAI,EAAE,GAFV;AAGI,IAAA,KAAK,EAAE,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,CAACT,MAAM,CAACU,SAAR,EAAmB,CAACjC,eAAD,GAAmBuB,MAAM,CAACW,KAA1B,GAAkC,IAArD,CADX;AAEI,IAAA,YAAY,EAAE,sBAAC3B,IAAD;AAAA,aAAUD,QAAQ,CAACC,IAAD,EAAO,UAAP,CAAlB;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,qBAHhB;AAII,IAAA,eAAe,EAAE,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACS,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,CAACT,MAAM,CAACU,SAAR,EAAmB,CAACjC,eAAD,GAAmBuB,MAAM,CAACW,KAA1B,GAAkC,IAArD,CADX;AAEI,IAAA,YAAY,EAAE,sBAAC3B,IAAD;AAAA,aAAUD,QAAQ,CAACC,IAAD,EAAO,UAAP,CAAlB;AAAA,KAFlB;AAGI,IAAA,WAAW,EAAC,sBAHhB;AAII,IAAA,eAAe,EAAE,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,EAoBI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEgB,MAAM,CAACY,eAAhC;AACA,IAAA,OAAO,EAAItB,iBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACa,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CApBJ,EA0BI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEb,MAAM,CAACc,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EA4BI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEd,MAAM,CAACe,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CA5BJ,CAXJ,CADJ,CAFJ;AAqDH;AAED,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,SAJL;AAKPC,IAAAA,eAAe,EAAE;AALV,GADkB;AAU7BjB,EAAAA,EAAE,EAAE;AACAa,IAAAA,IAAI,EAAE,CADN;AAEAC,IAAAA,aAAa,EAAE,QAFf;AAGAC,IAAAA,cAAc,EAAE,QAHhB;AAIAC,IAAAA,UAAU,EAAE;AAJZ,GAVyB;AAgB7Bd,EAAAA,IAAI,EAAE;AACFW,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,aAAa,EAAE,QAFb;AAGFC,IAAAA,cAAc,EAAE,YAHd;AAIFC,IAAAA,UAAU,EAAE;AAJV,GAhBuB;AAsB7Bf,EAAAA,KAAK,EAAE;AACHiB,IAAAA,KAAK,EAAE,iBADJ;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAE,GAHJ;AAIHC,IAAAA,QAAQ,EAAE;AAJP,GAtBsB;AA4B7BlB,EAAAA,kBAAkB,EAAE;AAChBmB,IAAAA,iBAAiB,EAAE,EADH;AAEhBC,IAAAA,YAAY,EAAE,CAFE;AAGhBC,IAAAA,YAAY,EAAE,EAHE;AAIhBP,IAAAA,eAAe,EAAE;AAJD,GA5BS;AAkC7Bb,EAAAA,SAAS,EAAE;AACPgB,IAAAA,KAAK,EAAE,GADA;AAEPK,IAAAA,MAAM,EAAE;AAFD,GAlCkB;AAsC7BnB,EAAAA,eAAe,EAAE;AACbc,IAAAA,KAAK,EAAE,GADM;AAEbK,IAAAA,MAAM,EAAE,EAFK;AAGbF,IAAAA,YAAY,EAAE,CAHD;AAIbR,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,UAAU,EAAE,QALC;AAMbU,IAAAA,SAAS,EAAE,EANE;AAObT,IAAAA,eAAe,EAAE;AAPJ,GAtCY;AA+C7BV,EAAAA,oBAAoB,EAAE;AAClBc,IAAAA,QAAQ,EAAE,EADQ;AAElBH,IAAAA,KAAK,EAAE;AAFW,GA/CO;AAmD7BvB,EAAAA,IAAI,EAAE;AACF8B,IAAAA,MAAM,EAAE,CADN;AAEFZ,IAAAA,IAAI,EAAE,CAFJ;AAGFI,IAAAA,eAAe,EAAE;AAHf,GAnDuB;AAwD7BrB,EAAAA,MAAM,EAAE;AACJiB,IAAAA,IAAI,EAAE,CADF;AAEJM,IAAAA,SAAS,EAAE;AAFP,GAxDqB;AA4D7BX,EAAAA,OAAO,EAAE;AACLM,IAAAA,aAAa,EAAE,KADV;AAELW,IAAAA,MAAM,EAAE,EAFH;AAGLL,IAAAA,KAAK,EAAE,GAHF;AAILL,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE;AALP,GA5DoB;AAmE7BP,EAAAA,YAAY,EAAE,EAnEe;AAsE7BC,EAAAA,aAAa,EAAE;AACXgB,IAAAA,SAAS,EAAE,EADA;AAEXP,IAAAA,SAAS,EAAE,QAFA;AAGXE,IAAAA,QAAQ,EAAE,EAHC;AAIXH,IAAAA,KAAK,EAAE;AAJI,GAtEc;AA6E7Bb,EAAAA,KAAK,EAAE;AACHsB,IAAAA,WAAW,EAAE,KADV;AAEHC,IAAAA,WAAW,EAAE;AAFV;AA7EsB,CAAlB,CAAf","sourcesContent":["import React, { useState, Component } from 'react'\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    Alert,\r\n} from 'react-native'\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\nimport axios from 'axios'\r\nimport { useNavigation } from '../../utils/useNavigation'\r\nimport { cansa } from '../../consts/Selector'\r\n\r\nexport default function ChangePassword(props:any) {\r\n    const { navigate } = useNavigation();\r\n    const [password, setPassword] = useState('')\r\n    const [passwordValdate, setPasswordValdate] = useState(true)\r\n    const {navigation,route} = props;\r\n    const { getParam, goBack } = navigation;\r\n    const valiDate = (text: any, type: any) => {\r\n        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/\r\n        if (type == 'password') {\r\n            if (passwordRegex.test(text)) {\r\n                setPassword(text)\r\n                setPasswordValdate(true)\r\n                console.warn('Password hợp lệ')\r\n            }\r\n            else {\r\n                setPasswordValdate(false)\r\n                console.warn('Password chưa hợp lệ gồm 6 kí tự ,chữ cái hoa đầu')\r\n            }\r\n        }\r\n    }\r\n    const changePasswordBtn = ()=>{\r\n        let email = getParam('email')\r\n        if(password){\r\n            axios.get(`${cansa[1]}/api/user/forgot/password/center/${email}/${password}`).then((res)=>{  \r\n                if(res.data.data){\r\n                    Alert.alert('Thông Báo',res.data.message);\r\n                    navigate('Login')\r\n                }else{\r\n                    Alert.alert('Thông Báo',res.data.message);\r\n                }\r\n            }) \r\n        }else{\r\n            Alert.alert('Thông báo', 'Email không giống nhau hoặc không đúng định dạng!!')\r\n\r\n        }\r\n        \r\n    }\r\n    const Divider = (props: any) => {\r\n        return <View {...props}>\r\n            <View style={styles.line}></View>\r\n            <Text style={styles.textOR}>OR</Text>\r\n            <View style={styles.line}></View>\r\n        </View>\r\n    }\r\n    return (\r\n        //Donot dismis Keyboard when click outside of TextInput\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.container}>\r\n                <View style={styles.up}>\r\n                    <Ionicons\r\n                        name=\"ios-speedometer\"\r\n                        size={100}\r\n                        color={'rgb(221, 97, 97)'}>\r\n                    </Ionicons>\r\n                    <Text style={styles.title}>\r\n                        Change Password\r\n                    </Text>\r\n                </View>\r\n                <View style={styles.down}>\r\n                    <View style={styles.textInputContainer}>\r\n                        <TextInput\r\n                            style={[styles.textInput, !passwordValdate ? styles.error : null]}\r\n                            onChangeText={(text) => valiDate(text, 'password')}\r\n                            placeholder=\"Import password new\"\r\n                            secureTextEntry={true}\r\n                        >\r\n                        </TextInput>\r\n                    </View>\r\n                    <View style={styles.textInputContainer}>\r\n                        <TextInput\r\n                            style={[styles.textInput, !passwordValdate ? styles.error : null]}\r\n                            onChangeText={(text) => valiDate(text, 'password')}\r\n                            placeholder=\"Confirm password new\"\r\n                            secureTextEntry={true}\r\n                        >\r\n                        </TextInput>\r\n                    </View>\r\n\r\n                    <TouchableOpacity style={styles.retrievalButton}\r\n                    onPress = {changePasswordBtn}\r\n                    >\r\n                        <Text style={styles.retrievalButtonTitle}>Recuperate</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <Divider style={styles.divider}></Divider>\r\n\r\n                    <TouchableOpacity style={styles.forgotButton}>\r\n                        <Text style={styles.navButtonText}>\r\n                            Have an account? Sign In\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n        backgroundColor: '#33FF99'\r\n\r\n\r\n    },\r\n    up: {\r\n        flex: 3,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    down: {\r\n        flex: 7,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'rgb(255,119,34)',\r\n        textAlign: 'center',\r\n        width: 400,\r\n        fontSize: 23\r\n    },\r\n    textInputContainer: {\r\n        paddingHorizontal: 10,\r\n        borderRadius: 6,\r\n        marginBottom: 20,\r\n        backgroundColor: 'rgba(255,255,255,0.2)'\r\n    },\r\n    textInput: {\r\n        width: 280,\r\n        height: 45\r\n    },\r\n    retrievalButton: {\r\n        width: 300,\r\n        height: 45,\r\n        borderRadius: 6,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        backgroundColor: 'rgb(221, 97, 97)'\r\n    },\r\n    retrievalButtonTitle: {\r\n        fontSize: 18,\r\n        color: 'white'\r\n    },\r\n    line: {\r\n        height: 1,\r\n        flex: 2,\r\n        backgroundColor: 'black'\r\n    },\r\n    textOR: {\r\n        flex: 1,\r\n        textAlign: 'center'\r\n    },\r\n    divider: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        width: 298,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    forgotButton: {\r\n\r\n    },\r\n    navButtonText: {\r\n        marginTop: 10,\r\n        textAlign: 'center',\r\n        fontSize: 15,\r\n        color: '#3b5998'\r\n\r\n    },\r\n    error: {\r\n        borderColor: 'red',\r\n        borderWidth: 1\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}