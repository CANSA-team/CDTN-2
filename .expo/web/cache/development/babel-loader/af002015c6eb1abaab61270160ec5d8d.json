{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { SliderActionType } from \"../action-types\";\nimport { cansa } from \"../../consts/Selector\";\nexport var getSlider = function getSlider() {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(cansa[0] + \"/api/slider/all/e4611a028c71342a5b083d2cbf59c494\"));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response) {\n              dispatch({\n                type: SliderActionType.ON_SLIDER_ERROR,\n                payload: 'Product list error'\n              });\n            } else {\n              dispatch({\n                type: SliderActionType.GET_ALL_SLIDER,\n                payload: response.data.data\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: SliderActionType.ON_SLIDER_ERROR,\n              payload: _context.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/redux/actions/sliderActions.ts"],"names":["axios","SliderActionType","cansa","getSlider","dispatch","get","response","type","ON_SLIDER_ERROR","payload","GET_ALL_SLIDER","data"],"mappings":";AAEA,OAAQA,KAAR,MAAoB,OAApB;AACA,SAAUC,gBAAV;AACA,SAAQC,KAAR;AAcA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO,iBAAQC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEwBJ,KAAK,CAACK,GAAN,CAAkBH,KAAK,CAAC,CAAD,CAAvB,sDAFxB;;AAAA;AAEOI,YAAAA,QAFP;;AAGC,gBAAG,CAACA,QAAJ,EAAa;AACTF,cAAAA,QAAQ,CAAC;AACLG,gBAAAA,IAAI,EAAEN,gBAAgB,CAACO,eADlB;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eAAD,CAAR;AAIH,aALD,MAKK;AAEDL,cAAAA,QAAQ,CAAC;AACLG,gBAAAA,IAAI,EAAEN,gBAAgB,CAACS,cADlB;AAELD,gBAAAA,OAAO,EAAEH,QAAQ,CAACK,IAAT,CAAcA;AAFlB,eAAD,CAAR;AAIH;;AAdF;AAAA;;AAAA;AAAA;AAAA;AAiBCP,YAAAA,QAAQ,CAAC;AACLG,cAAAA,IAAI,EAAEN,gBAAgB,CAACO,eADlB;AAELC,cAAAA,OAAO;AAFF,aAAD,CAAR;;AAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAwBH,CAzBM","sourcesContent":["import { Dispatch } from \"redux\";\r\nimport { SliderModel } from \"../models\";\r\nimport  axios  from 'axios';\r\nimport {  SliderActionType } from \"../action-types\";\r\nimport {cansa} from \"../../consts/Selector\";\r\n\r\nexport interface GetSlider{\r\n    readonly type: SliderActionType.GET_ALL_SLIDER,\r\n    payload?: [SliderModel]\r\n}\r\n\r\nexport interface SliderErrorAction{\r\n    readonly type: SliderActionType.ON_SLIDER_ERROR,\r\n    payload: any\r\n}\r\n\r\nexport type SliderActions = GetSlider | SliderErrorAction;\r\n\r\nexport const getSlider = () => {\r\n    return async ( dispatch: Dispatch<SliderActions>) => {\r\n        try {\r\n            const response = await axios.get<any>(`${cansa[0]}/api/slider/all/e4611a028c71342a5b083d2cbf59c494`)\r\n            if(!response){\r\n                dispatch({\r\n                    type: SliderActionType.ON_SLIDER_ERROR,\r\n                    payload: 'Product list error'\r\n                })\r\n            }else{\r\n                // save our location in local storage\r\n                dispatch({\r\n                    type: SliderActionType.GET_ALL_SLIDER,\r\n                    payload: response.data.data\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: SliderActionType.ON_SLIDER_ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}