{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { OderActionType } from \"../action-types\";\nvar initialState = {\n  status: undefined,\n  oderList: undefined,\n  error: undefined\n};\n\nvar oderReducer = function oderReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case OderActionType.ADD_ORDER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: action.payload\n      });\n\n    case OderActionType.GET_ALL_ORDER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        oderList: action.payload\n      });\n\n    case OderActionType.ON_ORDER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default oderReducer;","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/redux/reducers/oderReducer.ts"],"names":["OderActionType","initialState","status","undefined","oderList","error","oderReducer","state","action","type","ADD_ORDER","payload","GET_ALL_ORDER","ON_ORDER_ERROR"],"mappings":";;;;;;AAAA,SAA4BA,cAA5B;AAMA,IAAMC,YAAuB,GAAG;AAC5BC,EAAAA,MAAM,EAAEC,SADoB;AAE5BC,EAAAA,QAAQ,EAAED,SAFkB;AAG5BE,EAAAA,KAAK,EAAEF;AAHqB,CAAhC;;AAMA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAA2D;AAAA,MAA1DC,KAA0D,uEAAvCN,YAAuC;AAAA,MAAzBO,MAAyB;;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAc,CAACU,SAApB;AACI,6CACOH,KADP;AAEIL,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAFnB;;AAIJ,SAAKX,cAAc,CAACY,aAApB;AACI,6CACOL,KADP;AAEIH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAFrB;;AAIJ,SAAKX,cAAc,CAACa,cAApB;AACI,6CACON,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AAjBR;AAoBH,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { CommentActionType, OderActionType, SliderActionType } from \"../action-types\";\r\nimport { CommentActions } from \"../actions/commentActions\";\r\nimport { OrderActions } from \"../actions/oderActions\";\r\nimport { CommentState, CommentModel, OderState } from \"../models\";\r\n\r\n\r\nconst initialState: OderState = {\r\n    status: undefined,\r\n    oderList: undefined,\r\n    error: undefined\r\n}\r\n\r\nconst oderReducer = (state: OderState = initialState, action: OrderActions) => {\r\n    switch (action.type) {\r\n        case OderActionType.ADD_ORDER:\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case OderActionType.GET_ALL_ORDER:\r\n            return {\r\n                ...state,\r\n                oderList: action.payload\r\n            }\r\n        case OderActionType.ON_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default oderReducer;"]},"metadata":{},"sourceType":"module"}