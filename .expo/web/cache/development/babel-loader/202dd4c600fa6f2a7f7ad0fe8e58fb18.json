{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Chat\\\\ListChat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from 'react-navigation';\nimport HeaderTitle from \"../../components/HeaderTitle\";\nimport axios from 'axios';\nimport { Avatar, Badge, withBadge, Icon } from 'react-native-elements';\nexport default function Chat(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var tempData = [];\n\n    (function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"http://192.168.1.93:3002/api/chat/getChatList/1/\").then(function _callee(res) {\n                var i, temNum;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        i = 1;\n                        temNum = Object.keys(res.data.data).length;\n                        res.data.data.forEach(function (element) {\n                          axios.get(\"https://103.207.38.200:443/api/user/get/user/by/\" + element.user_to).then(function (res1) {\n                            tempData.push({\n                              id: '_' + Math.random().toString(36).substr(2, 16),\n                              title: res1.data.data.user_name,\n                              id_user: element.user_to,\n                              newStatusMess: false,\n                              statusOnline: true,\n                              text: 'oke'\n                            });\n                            i++;\n\n                            if (temNum == i) {\n                              var temp = tempData.sort(function (x, y) {\n                                return x === y ? 0 : x ? -1 : 1;\n                              });\n                              setData(temp);\n                            }\n                          }).catch(function (error) {\n                            return console.log(error);\n                          });\n                        });\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (error) {\n                return console.log(error);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var BadgedIcon = withBadge(1)(Icon);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(Avatar, {\n      rounded: true,\n      source: {\n        uri: 'https://randomuser.me/api/portraits/men/41.jpg'\n      },\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), React.createElement(Badge, {\n      status: \"success\",\n      value: ' ',\n      containerStyle: {\n        position: 'absolute',\n        top: 57,\n        left: item.statusOnline ? 55 : -9999,\n        zIndex: 999\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [styles.col, {\n        fontSize: 15,\n        fontWeight: item.newStatusMess ? 'bold' : 'normal'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, item.title), React.createElement(Text, {\n      style: [styles.col, {\n        fontSize: 15,\n        fontWeight: item.newStatusMess ? 'bold' : 'normal'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, item.text))));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderTitle, {\n    title: 'List Chat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E5E5E5'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  item: {\n    paddingTop: 10,\n    marginVertical: 8,\n    marginHorizontal: 10\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  col: {\n    flex: 1,\n    marginVertical: 8,\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Chat/ListChat.tsx"],"names":["React","useState","useEffect","SafeAreaView","HeaderTitle","axios","Avatar","Badge","withBadge","Icon","Chat","props","data","setData","tempData","get","then","res","i","temNum","Object","keys","length","forEach","element","user_to","res1","push","id","Math","random","toString","substr","title","user_name","id_user","newStatusMess","statusOnline","text","temp","sort","x","y","catch","error","console","log","BadgedIcon","renderItem","item","styles","row","uri","position","top","left","zIndex","flexDirection","col","fontSize","fontWeight","container","StyleSheet","create","flex","backgroundColor","tinyLogo","width","height","paddingTop","marginVertical","marginHorizontal","flexWrap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AAKA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,IAAnC,QAA+C,uBAA/C;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AAAA;;AACrC,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AAGAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIY,QAAQ,GAAG,EAAf;;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACST,KAAK,CAACU,GAAN,qDACDC,IADC,CACI,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBAAAA,CADD,GACK,CADL;AAECC,wBAAAA,MAFD,GAEUC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACL,IAAJ,CAASA,IAArB,EAA2BU,MAFrC;AAGFL,wBAAAA,GAAG,CAACL,IAAJ,CAASA,IAAT,CAAcW,OAAd,CAAsB,UAAAC,OAAO,EAAI;AAC7BnB,0BAAAA,KAAK,CAACU,GAAN,sDAA6DS,OAAO,CAACC,OAArE,EACKT,IADL,CACU,UAAAU,IAAI,EAAI;AACVZ,4BAAAA,QAAQ,CAACa,IAAT,CAAc;AACVC,8BAAAA,EAAE,EAAE,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CADA;AAEVC,8BAAAA,KAAK,EAAEP,IAAI,CAACd,IAAL,CAAUA,IAAV,CAAesB,SAFZ;AAGVC,8BAAAA,OAAO,EAAEX,OAAO,CAACC,OAHP;AAIVW,8BAAAA,aAAa,EAAE,KAJL;AAKVC,8BAAAA,YAAY,EAAE,IALJ;AAMVC,8BAAAA,IAAI,EAAE;AANI,6BAAd;AAQApB,4BAAAA,CAAC;;AACD,gCAAGC,MAAM,IAAID,CAAb,EAAe;AACX,kCAAIqB,IAAI,GAAGzB,QAAQ,CAAC0B,IAAT,CAAc,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrC,uCAAQD,CAAC,KAAKC,CAAP,GAAY,CAAZ,GAAgBD,CAAC,GAAG,CAAC,CAAJ,GAAQ,CAAhC;AACH,+BAFU,CAAX;AAGA5B,8BAAAA,OAAO,CAAC0B,IAAD,CAAP;AACH;AACJ,2BAjBL,EAkBKI,KAlBL,CAkBW,UAAAC,KAAK;AAAA,mCAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,2BAlBhB;AAmBH,yBApBD;;AAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EA2BDD,KA3BC,CA2BK,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,eA3BV,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAiCH,GAnCQ,EAmCN,EAnCM,CAAT;AAoCA,MAAMG,UAAU,GAAGvC,SAAS,CAAC,CAAD,CAAT,CAAaC,IAAb,CAAnB;;AAEA,MAAMuC,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC7B,WACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACD,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE;AADD,OAFZ;AAKI,MAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAC,SADX;AAEI,MAAA,KAAK,EAAE,GAFX;AAGI,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,GAAG,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAEN,IAAI,CAACZ,YAAL,GAAoB,EAApB,GAAyB,CAAC,IAAjE;AAAuEmB,QAAAA,MAAM,EAAE;AAA/E,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAaI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTC,QAAAA,aAAa,EAAE;AADN,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACP,MAAM,CAACQ,GAAR,EAAa;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,UAAU,EAAEX,IAAI,CAACb,aAAL,GAAqB,MAArB,GAA8B;AAA1D,OAAb,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkGa,IAAI,CAAChB,KAAvG,CAHJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACiB,MAAM,CAACQ,GAAR,EAAa;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,UAAU,EAAEX,IAAI,CAACb,aAAL,GAAqB,MAArB,GAA8B;AAA1D,OAAb,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkGa,IAAI,CAACX,IAAvG,CAJJ,CAbJ,CADJ,CADJ;AAwBH,GAzBD;;AA0BA,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEY,MAAM,CAACW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEjD,IADV;AAEI,IAAA,UAAU,EAAEoC,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACrB,EAAf;AAAA,KAHlB;AAII,IAAA,SAAS,EAAEhB,IAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAYH;AACD,IAAMsC,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE;AAFF,GALmB;AAS7BnB,EAAAA,IAAI,EAAE;AACFoB,IAAAA,UAAU,EAAE,EADV;AAEFC,IAAAA,cAAc,EAAE,CAFd;AAGFC,IAAAA,gBAAgB,EAAE;AAHhB,GATuB;AAc7BpB,EAAAA,GAAG,EAAE;AACDM,IAAAA,aAAa,EAAE,KADd;AAEDe,IAAAA,QAAQ,EAAE;AAFT,GAdwB;AAkB7Bd,EAAAA,GAAG,EAAE;AACDM,IAAAA,IAAI,EAAE,CADL;AAEDM,IAAAA,cAAc,EAAE,CAFf;AAGDC,IAAAA,gBAAgB,EAAE;AAHjB;AAlBwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Text, FlatList, TouchableOpacity, View, TextInput, StyleSheet, ScrollView } from 'react-native'\r\nimport { SafeAreaView } from 'react-navigation'\r\nimport COLORS from '../../consts/Colors'\r\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport { useNavigation } from '../../utils/useNavigation';\r\nimport HeaderTitle from '../../components/HeaderTitle';\r\nimport axios from 'axios';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport io from \"socket.io-client\";\r\nimport { Avatar, Badge, withBadge, Icon } from 'react-native-elements';\r\nimport { cansa } from '../../consts/Selector'\r\n\r\nexport default function Chat(props: any) {\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        let tempData = [];\r\n        (async () => {\r\n            await axios.get(`http://192.168.1.93:3002/api/chat/getChatList/1/`)\r\n                .then(async res => {\r\n                   let i = 1;\r\n                   let temNum = Object.keys(res.data.data).length;\r\n                    res.data.data.forEach(element => {\r\n                        axios.get(`https://103.207.38.200:443/api/user/get/user/by/${element.user_to}`)\r\n                            .then(res1 => {\r\n                                tempData.push({\r\n                                    id: '_' + Math.random().toString(36).substr(2, 16),\r\n                                    title: res1.data.data.user_name,\r\n                                    id_user: element.user_to,\r\n                                    newStatusMess: false,\r\n                                    statusOnline: true,\r\n                                    text: 'oke',\r\n                                })\r\n                                i++;\r\n                                if(temNum == i){\r\n                                    let temp = tempData.sort(function (x, y) {\r\n                                        return (x === y) ? 0 : x ? -1 : 1;\r\n                                    })\r\n                                    setData(temp)\r\n                                }\r\n                            })\r\n                            .catch(error => console.log(error));\r\n                    });\r\n                    \r\n                })\r\n                .catch(error => console.log(error));\r\n                \r\n\r\n        })();\r\n        \r\n    }, [])\r\n    const BadgedIcon = withBadge(1)(Icon)\r\n\r\n    const renderItem = ({ item }) => {\r\n        return (\r\n            <TouchableOpacity style={styles.item}>\r\n                <View style={styles.row}>\r\n                    <Avatar\r\n                        rounded\r\n                        source={{\r\n                            uri: 'https://randomuser.me/api/portraits/men/41.jpg',\r\n                        }}\r\n                        size=\"large\"\r\n                    />\r\n                    <Badge\r\n                        status=\"success\"\r\n                        value={' '}\r\n                        containerStyle={{ position: 'absolute', top: 57, left: item.statusOnline ? 55 : -9999, zIndex: 999, }}\r\n                    />\r\n                    <View style={{\r\n                        flexDirection: \"column\",\r\n                    }}>\r\n                        <Text style={[styles.col, { fontSize: 15, fontWeight: item.newStatusMess ? 'bold' : 'normal' }]}>{item.title}</Text>\r\n                        <Text style={[styles.col, { fontSize: 15, fontWeight: item.newStatusMess ? 'bold' : 'normal' }]}>{item.text}</Text>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <HeaderTitle title={'List Chat'} />\r\n            <FlatList\r\n                data={data}\r\n                renderItem={renderItem}\r\n                keyExtractor={(item) => item.id}\r\n                extraData={data}\r\n            />\r\n        </SafeAreaView>\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n    tinyLogo: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    item: {\r\n        paddingTop: 10,\r\n        marginVertical: 8,\r\n        marginHorizontal: 10,\r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    col: {\r\n        flex: 1,\r\n        marginVertical: 8,\r\n        marginHorizontal: 10,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}