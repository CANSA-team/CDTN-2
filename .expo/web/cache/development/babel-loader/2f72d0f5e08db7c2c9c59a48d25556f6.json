{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ImageActionType } from \"../action-types\";\nvar initialState = {\n  image: undefined,\n  error: undefined\n};\n\nvar imageReducer = function imageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ImageActionType.GET_IMAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        image: action.payload\n      });\n\n    case ImageActionType.ON_IMAGE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default imageReducer;","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/redux/reducers/imageReducer.ts"],"names":["ImageActionType","initialState","image","undefined","error","imageReducer","state","action","type","GET_IMAGE","payload","ON_IMAGE_ERROR"],"mappings":";;;;;;AAAA,SAA2BA,eAA3B;AAMA,IAAMC,YAAwB,GAAG;AAC7BC,EAAAA,KAAK,EAAEC,SADsB;AAE7BC,EAAAA,KAAK,EAAED;AAFsB,CAAjC;;AAKA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAA4D;AAAA,MAA3DC,KAA2D,uEAAvCL,YAAuC;AAAA,MAAzBM,MAAyB;;AAC7E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,eAAe,CAACS,SAArB;AACI,6CACOH,KADP;AAEIJ,QAAAA,KAAK,EAAEK,MAAM,CAACG;AAFlB;;AAIJ,SAAKV,eAAe,CAACW,cAArB;AACI,6CACOL,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAeH,CAhBD;;AAkBA,eAAeD,YAAf","sourcesContent":["import { AccessActionType, ImageActionType } from \"../action-types\";\r\nimport { AccessActions } from \"../actions/accessActions\";\r\nimport { ImageActions } from \"../actions/imageActions\";\r\nimport { AccessState,ImageStage } from \"../models\";\r\n\r\n\r\nconst initialState: ImageStage = {\r\n    image: undefined,\r\n    error: undefined\r\n}\r\n\r\nconst imageReducer = (state: ImageStage = initialState, action: ImageActions) => {\r\n    switch (action.type) {\r\n        case ImageActionType.GET_IMAGE:\r\n            return {\r\n                ...state,\r\n                image: action.payload\r\n            }\r\n        case ImageActionType.ON_IMAGE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default imageReducer;"]},"metadata":{},"sourceType":"module"}