{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\natsw\\\\Desktop\\\\Mobile\\\\CDTN-2\\\\src\\\\components\\\\SwitchNavigation.tsx\";\n\nimport React from 'react';\nimport { createSwitchNavigator, createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Lauding from \"./../screens/Lauding\";\nimport Home from \"./../screens/Home\";\nimport Cart from \"../screens/Cart\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Account from \"./../screens/Account\";\nimport Categories from \"../screens/Categories\";\nimport COLORS from \"../consts/Colors\";\nimport ProductDetail from \"./../screens/ProductDetail\";\nvar DIMENS = {\n  iconSize: 30,\n  fontNameCategory: 15\n};\nvar switchNavigator = createSwitchNavigator({\n  landingStack: {\n    screen: createStackNavigator({\n      Landing: Lauding\n    }, {\n      defaultNavigationOptions: {\n        headerShown: false\n      }\n    })\n  },\n  homeStack: createBottomTabNavigator({\n    home: {\n      screen: createStackNavigator({\n        Home: Home,\n        ProductDetail: ProductDetail\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused,\n              tintColor = _ref.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"home\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"home-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 114\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Home\"\n      }\n    },\n    category: {\n      screen: createStackNavigator({\n        Categories: Categories\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              tintColor = _ref2.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"ios-grid-sharp\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"ios-grid-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 124\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Categories\"\n      }\n    },\n    cart: {\n      screen: createStackNavigator({\n        Cart: Cart\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              tintColor = _ref3.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"cart\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"cart-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 114\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Cart\"\n      }\n    },\n    account: {\n      screen: createStackNavigator({\n        Account: Account\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              tintColor = _ref4.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"person\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"person-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 116\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Account\"\n      }\n    }\n  }, {\n    tabBarOptions: {\n      activeTintColor: COLORS.primary,\n      inactiveTintColor: COLORS.colorFontInit,\n      labelStyle: {\n        fontSize: DIMENS.fontNameCategory,\n        fontWeight: '600'\n      },\n      style: {\n        padding: 8,\n        height: 60\n      },\n      allowFontScaling: true\n    }\n  })\n});\nvar AppNavigation = createAppContainer(switchNavigator);\nexport default function SwitchNavigation() {\n  return React.createElement(AppNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/natsw/Desktop/Mobile/CDTN-2/src/components/SwitchNavigation.tsx"],"names":["React","createSwitchNavigator","createAppContainer","createStackNavigator","createBottomTabNavigator","Lauding","Home","Cart","Ionicons","Account","Categories","COLORS","ProductDetail","DIMENS","iconSize","fontNameCategory","switchNavigator","landingStack","screen","Landing","defaultNavigationOptions","headerShown","homeStack","home","navigationOptions","tabBarIcon","focused","tintColor","icon","primary","colorFontInit","tabBarLabel","category","cart","account","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","style","padding","height","allowFontScaling","AppNavigation","SwitchNavigation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { createSwitchNavigator, createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\nimport Lauding from './../screens/Lauding';\r\nimport Home from './../screens/Home';\r\nimport Cart from '../screens/Cart';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport Account from './../screens/Account';\r\nimport Categories from '../screens/Categories';\r\nimport COLORS from '../consts/Colors';\r\nimport ProductDetail from './../screens/ProductDetail';\r\n\r\n\r\n\r\nconst DIMENS = {\r\n    iconSize : 30,\r\n    fontNameCategory: 15\r\n}\r\nconst switchNavigator = createSwitchNavigator({\r\n    landingStack: {\r\n        screen: createStackNavigator({\r\n            Landing: Lauding,\r\n        }, {\r\n            defaultNavigationOptions: {\r\n                headerShown: false\r\n            }\r\n        }),\r\n\r\n    },\r\n    \r\n    homeStack: createBottomTabNavigator({\r\n        // Home tab Icon\r\n        home: {\r\n            screen: createStackNavigator({\r\n                Home: Home,\r\n                ProductDetail: ProductDetail\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n                \r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"home\" size={DIMENS.iconSize} color={COLORS.primary}/> : <Ionicons name=\"home-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit}/>\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Home\"\r\n            },\r\n            \r\n        },\r\n        category: {\r\n            screen: createStackNavigator({\r\n                Categories: Categories,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n                \r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"ios-grid-sharp\" size={DIMENS.iconSize} color={COLORS.primary}/> : <Ionicons name=\"ios-grid-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit}/>\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Categories\"\r\n            },\r\n            \r\n        },\r\n        cart: {\r\n            screen: createStackNavigator({\r\n                Cart: Cart,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n                \r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"cart\" size={DIMENS.iconSize} color={COLORS.primary}/> : <Ionicons name=\"cart-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit}/>\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Cart\"\r\n            },\r\n            \r\n        },\r\n        account: {\r\n            screen: createStackNavigator({\r\n                Account: Account,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n                \r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"person\" size={DIMENS.iconSize} color={COLORS.primary}/> : <Ionicons name=\"person-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit}/>\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Account\"\r\n            },\r\n            \r\n        },\r\n    },{\r\n        tabBarOptions:{\r\n            activeTintColor: COLORS.primary,\r\n            inactiveTintColor :COLORS.colorFontInit,\r\n            labelStyle:{\r\n                fontSize:DIMENS.fontNameCategory,\r\n                fontWeight:'600'\r\n            },\r\n            style: {\r\n                padding:8,\r\n                height: 60,\r\n            },\r\n            allowFontScaling: true\r\n        }          \r\n    }),\r\n});\r\nconst AppNavigation = createAppContainer(switchNavigator);\r\n\r\nexport default function SwitchNavigation() {\r\n    return (\r\n        <AppNavigation />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}