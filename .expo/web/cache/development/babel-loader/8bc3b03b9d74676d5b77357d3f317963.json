{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\components\\\\SwitchNavigation.tsx\";\n\nimport React from 'react';\nimport { createSwitchNavigator, createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Landing from \"../screens/Landing\";\nimport Home from \"./../screens/Home\";\nimport Cart from \"../screens/Cart\";\nimport Shop from \"../screens/Shop\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Account from \"./../screens/Account\";\nimport Categories from \"../screens/Categories\";\nimport COLORS from \"../consts/Colors\";\nimport ProductDetail from \"./../screens/ProductDetail\";\nimport Search from \"./../screens/Search\";\nimport Profile from \"./../screens/User/Profile\";\nimport Checkout from \"./../screens/Checkout\";\nimport CheckoutSuccess from \"./../screens/CheckoutSuccess\";\nimport Ordered from \"./../screens/User/Ordered\";\nimport Login from \"../screens/Auth/Login\";\nimport Register from \"../screens/Auth/Register\";\nimport EmailOTPscreen from \"../screens/Auth/EmailOTPscreen\";\nimport OTPscreen from \"../screens/Auth/OTPscreen\";\nimport ChangePassword from \"../screens/Auth/ChangePassword\";\nimport OderDetail from \"../screens/User/OderDetail\";\nimport Complaint from \"../screens/Complaint\";\nimport EditProfile from \"../screens/User/EditProfile\";\nimport Chat from \"../screens/Chat/Chat\";\nimport ListChat from \"../screens/Chat/ListChat\";\nvar DIMENS = {\n  iconSize: 30,\n  fontNameCategory: 15\n};\nvar switchNavigator = createSwitchNavigator({\n  landingStack: {\n    screen: createStackNavigator({\n      Landing: Landing\n    }, {\n      defaultNavigationOptions: {\n        headerShown: false\n      }\n    })\n  },\n  loginStack: {\n    screen: createStackNavigator({\n      Login: Login,\n      OTPscreen: OTPscreen,\n      EmailOTPscreen: EmailOTPscreen,\n      ChangePassword: ChangePassword,\n      Register: Register\n    }, {\n      defaultNavigationOptions: {\n        headerShown: false\n      }\n    })\n  },\n  shopStack: {\n    screen: createStackNavigator({\n      Shop: Shop\n    }, {\n      defaultNavigationOptions: {\n        headerShown: false\n      }\n    })\n  },\n  homeStack: createBottomTabNavigator({\n    home: {\n      screen: createStackNavigator({\n        Home: Home,\n        ProductDetail: ProductDetail,\n        Search: Search,\n        Shop: Shop,\n        Complaint: Complaint\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused,\n              tintColor = _ref.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"home\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"home-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 115\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Home\"\n      }\n    },\n    category: {\n      screen: createStackNavigator({\n        Categories: Categories,\n        Search: Search\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              tintColor = _ref2.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"ios-grid-sharp\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"ios-grid-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 125\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Categories\"\n      }\n    },\n    cart: {\n      screen: createStackNavigator({\n        Cart: Cart,\n        Checkout: Checkout,\n        CheckoutSuccess: CheckoutSuccess,\n        Ordered: Ordered\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              tintColor = _ref3.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"cart\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"cart-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 115\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Cart\"\n      }\n    },\n    account: {\n      screen: createStackNavigator({\n        Account: Account,\n        Profile: Profile,\n        Checkout: Checkout,\n        Ordered: Ordered,\n        OderDetail: OderDetail,\n        EditProfile: EditProfile,\n        EmailOTPscreen: EmailOTPscreen,\n        ChangePassword: ChangePassword,\n        OTPscreen: OTPscreen,\n        Chat: Chat,\n        ListChat: ListChat\n      }, {\n        defaultNavigationOptions: {\n          headerShown: false\n        }\n      }),\n      navigationOptions: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              tintColor = _ref4.tintColor;\n          var icon = focused ? React.createElement(Ionicons, {\n            name: \"person\",\n            size: DIMENS.iconSize,\n            color: COLORS.primary,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 42\n            }\n          }) : React.createElement(Ionicons, {\n            name: \"person-outline\",\n            size: DIMENS.iconSize,\n            color: COLORS.colorFontInit,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 117\n            }\n          });\n          return icon;\n        },\n        tabBarLabel: \"Account\"\n      }\n    }\n  }, {\n    tabBarOptions: {\n      activeTintColor: COLORS.primary,\n      inactiveTintColor: COLORS.colorFontInit,\n      labelStyle: {\n        fontSize: DIMENS.fontNameCategory,\n        fontWeight: '600'\n      },\n      style: {\n        padding: 8,\n        height: 60\n      },\n      allowFontScaling: true\n    }\n  })\n});\nvar AppNavigation = createAppContainer(switchNavigator);\nexport default function SwitchNavigation() {\n  return React.createElement(AppNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/components/SwitchNavigation.tsx"],"names":["React","createSwitchNavigator","createAppContainer","createStackNavigator","createBottomTabNavigator","Landing","Home","Cart","Shop","Ionicons","Account","Categories","COLORS","ProductDetail","Search","Profile","Checkout","CheckoutSuccess","Ordered","Login","Register","EmailOTPscreen","OTPscreen","ChangePassword","OderDetail","Complaint","EditProfile","Chat","ListChat","DIMENS","iconSize","fontNameCategory","switchNavigator","landingStack","screen","defaultNavigationOptions","headerShown","loginStack","shopStack","homeStack","home","navigationOptions","tabBarIcon","focused","tintColor","icon","primary","colorFontInit","tabBarLabel","category","cart","account","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","style","padding","height","allowFontScaling","AppNavigation","SwitchNavigation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { createSwitchNavigator, createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\nimport Landing from '../screens/Landing';\r\nimport Home from './../screens/Home';\r\nimport Cart from '../screens/Cart';\r\nimport Shop from '../screens/Shop';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport Account from './../screens/Account';\r\nimport Categories from '../screens/Categories';\r\nimport COLORS from '../consts/Colors';\r\nimport ProductDetail from './../screens/ProductDetail';\r\nimport Search from './../screens/Search';\r\nimport Profile from './../screens/User/Profile';\r\nimport Checkout from './../screens/Checkout';\r\nimport CheckoutSuccess from './../screens/CheckoutSuccess';\r\nimport Ordered from './../screens/User/Ordered';\r\nimport Login from '../screens/Auth/Login';\r\nimport Register from '../screens/Auth/Register';\r\nimport EmailOTPscreen from '../screens/Auth/EmailOTPscreen';\r\nimport OTPscreen from '../screens/Auth/OTPscreen';\r\nimport ChangePassword from '../screens/Auth/ChangePassword';\r\nimport OderDetail from '../screens/User/OderDetail';\r\nimport Complaint from '../screens/Complaint';\r\nimport EditProfile from '../screens/User/EditProfile';\r\nimport Chat from '../screens/Chat/Chat';\r\nimport ListChat from '../screens/Chat/ListChat';\r\n\r\nconst DIMENS = {\r\n    iconSize: 30,\r\n    fontNameCategory: 15\r\n}\r\nconst switchNavigator = createSwitchNavigator({\r\n    landingStack: {\r\n        screen: createStackNavigator({\r\n            Landing: Landing,\r\n        }, {\r\n            defaultNavigationOptions: {\r\n                headerShown: false\r\n            }\r\n        }),\r\n\r\n    },\r\n\r\n    loginStack: {\r\n        screen: createStackNavigator({\r\n            Login,\r\n            OTPscreen,\r\n            EmailOTPscreen,\r\n            ChangePassword,\r\n            Register,\r\n        }, {\r\n            defaultNavigationOptions: {\r\n                headerShown: false\r\n            }\r\n        })\r\n    },\r\n\r\n\r\n    shopStack: {\r\n        screen: createStackNavigator({\r\n            Shop,\r\n        }, {\r\n            defaultNavigationOptions: {\r\n                headerShown: false\r\n            }\r\n        })\r\n    },\r\n\r\n    homeStack: createBottomTabNavigator({\r\n        // Home tab Icon\r\n        home: {\r\n            screen: createStackNavigator({\r\n                Home: Home,\r\n                ProductDetail: ProductDetail,\r\n                Search: Search,\r\n                Shop: Shop,\r\n                Complaint: Complaint,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n\r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"home\" size={DIMENS.iconSize} color={COLORS.primary} /> : <Ionicons name=\"home-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit} />\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Home\"\r\n            },\r\n\r\n        },\r\n        category: {\r\n            screen: createStackNavigator({\r\n                Categories: Categories,\r\n                Search: Search,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"ios-grid-sharp\" size={DIMENS.iconSize} color={COLORS.primary} /> : <Ionicons name=\"ios-grid-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit} />\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Categories\"\r\n            },\r\n\r\n        },\r\n        cart: {\r\n            screen: createStackNavigator({\r\n                Cart: Cart,\r\n                Checkout: Checkout,\r\n                CheckoutSuccess: CheckoutSuccess,\r\n                Ordered: Ordered\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n\r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"cart\" size={DIMENS.iconSize} color={COLORS.primary} /> : <Ionicons name=\"cart-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit} />\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Cart\"\r\n            },\r\n\r\n        },\r\n        account: {\r\n            screen: createStackNavigator({\r\n                Account: Account,\r\n                Profile: Profile,\r\n                Checkout: Checkout,\r\n                Ordered: Ordered,\r\n                OderDetail: OderDetail,\r\n                EditProfile: EditProfile,\r\n                EmailOTPscreen,\r\n                ChangePassword,\r\n                OTPscreen,\r\n                Chat,\r\n                ListChat,\r\n            }, {\r\n                defaultNavigationOptions: {\r\n                    headerShown: false,\r\n                },\r\n\r\n            }),\r\n            navigationOptions: {\r\n                tabBarIcon: ({ focused, tintColor }) => {\r\n                    let icon = focused ? <Ionicons name=\"person\" size={DIMENS.iconSize} color={COLORS.primary} /> : <Ionicons name=\"person-outline\" size={DIMENS.iconSize} color={COLORS.colorFontInit} />\r\n                    return icon;\r\n                },\r\n                tabBarLabel: \"Account\"\r\n            },\r\n\r\n        },\r\n    }, {\r\n        tabBarOptions: {\r\n            activeTintColor: COLORS.primary,\r\n            inactiveTintColor: COLORS.colorFontInit,\r\n            labelStyle: {\r\n                fontSize: DIMENS.fontNameCategory,\r\n                fontWeight: '600'\r\n            },\r\n            style: {\r\n                padding: 8,\r\n                height: 60,\r\n            },\r\n            allowFontScaling: true\r\n        }\r\n    }),\r\n});\r\nconst AppNavigation = createAppContainer(switchNavigator);\r\n\r\nexport default function SwitchNavigation() {\r\n    return (\r\n        <AppNavigation />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}