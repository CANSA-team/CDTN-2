{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Chat\\\\Chat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from 'react-navigation';\nimport HeaderTitle from \"../../components/HeaderTitle\";\nimport axios from 'axios';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport io from \"socket.io-client\";\nvar user_avatar = undefined;\nexport default function Chat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mess = _useState2[0],\n      setMess = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTyping = _useState4[0],\n      setIsTyping = _useState4[1];\n\n  var socket = io(\"http://192.168.1.93:3002\");\n  var myName = 'Hoàng Anh';\n  var myID = 1;\n  var hisID = 2;\n  useEffect(function () {\n    setMess([]);\n\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"http://192.168.1.93:3002/api/chat/getChatHistory/\" + myID + \"/\" + hisID + \"/1/100\").then(function (res) {\n                axios.get(\"http://192.168.1.93:3002/api/chat/getChatHistory/\" + hisID + \"/\" + myID + \"/1/100\").then(function (res2) {\n                  var data_chat_all = [];\n                  res2.data.data.forEach(function (element) {\n                    var dataMesss = {\n                      \"_id\": '' + Math.random().toString(36).substr(2, 16),\n                      \"createdAt\": element.CreateDate,\n                      \"text\": element.message\n                    };\n                    data_chat_all.push(dataMesss);\n                  });\n                  res.data.data.forEach(function (element) {\n                    var dataMesss = {\n                      \"_id\": '' + Math.random().toString(36).substr(2, 16),\n                      \"createdAt\": element.CreateDate,\n                      \"text\": element.message,\n                      \"user\": {}\n                    };\n                    data_chat_all.push(dataMesss);\n                  });\n                  var temp = data_chat_all.sort(function (a, b) {\n                    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n                  });\n                  setMess(temp);\n                }).catch(function (error) {\n                  return console.log(error);\n                });\n              }).catch(function (error) {\n                return console.log(error);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    socket.on(\"typing\", function (data) {\n      if (data.user_to == myID && data.user_id == hisID) {\n        if (data.status === true) {\n          setIsTyping(true);\n        } else {\n          setIsTyping(false);\n        }\n      }\n    });\n    socket.on(\"thread\", function (data) {\n      if (data.user_to == myID && data.user_id == hisID) {\n        var dataMesss = {\n          \"_id\": '' + Math.random().toString(36).substr(2, 16),\n          \"createdAt\": new Date(),\n          \"text\": data.message,\n          \"user\": {\n            \"_id\": data.user_id,\n            \"avatar\": \"\",\n            \"name\": data.username\n          }\n        };\n        setMess(function (prevState) {\n          return GiftedChat.append(prevState, dataMesss);\n        });\n      }\n    });\n  }, []);\n\n  var _onSend = function onSend(messNew) {\n    setMess(function (prevState) {\n      return GiftedChat.append(prevState, messNew);\n    });\n    var msgDetails = {\n      user_id: myID,\n      username: 'Hoàng Anh',\n      user_to: hisID,\n      message: messNew[0].text,\n      image: '',\n      base64: ''\n    };\n    socket.emit(\"messages\", msgDetails);\n  };\n\n  var timeout;\n\n  function timeoutFunction() {\n    var typo = {\n      user_to: hisID,\n      user_id: myID,\n      status: false\n    };\n    socket.emit(\"is_typing\", typo);\n  }\n\n  var keyPress = function keyPress() {\n    var typo = {\n      user_to: hisID,\n      user_id: myID,\n      status: true\n    };\n    socket.emit(\"is_typing\", typo);\n    clearTimeout(timeout);\n    timeout = setTimeout(timeoutFunction, 2000);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderTitle, {\n    title: 'Chat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), React.createElement(GiftedChat, {\n    inverted: true,\n    messages: mess,\n    isTyping: isTyping,\n    isLoadingEarlier: true,\n    renderUsernameOnMessage: true,\n    renderAvatar: function renderAvatar() {\n      return null;\n    },\n    showAvatarForEveryMessage: true,\n    onInputTextChanged: function onInputTextChanged() {\n      return keyPress();\n    },\n    onSend: function onSend(newMessages) {\n      return _onSend(newMessages);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E5E5E5'\n  }\n});","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Chat/Chat.tsx"],"names":["React","useState","useEffect","SafeAreaView","HeaderTitle","axios","GiftedChat","io","user_avatar","undefined","Chat","props","mess","setMess","isTyping","setIsTyping","socket","myName","myID","hisID","get","then","res","res2","data_chat_all","data","forEach","element","dataMesss","Math","random","toString","substr","CreateDate","message","push","temp","sort","a","b","Date","createdAt","getTime","catch","error","console","log","on","user_to","user_id","status","username","prevState","append","onSend","messNew","msgDetails","text","image","base64","emit","timeout","timeoutFunction","typo","keyPress","clearTimeout","setTimeout","styles","container","newMessages","StyleSheet","create","flex","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AAKA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,WAAgB,GAAGC,SAAvB;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AACrC,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCZ,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,MAAM,GAAGT,EAAE,CAAC,0BAAD,CAAjB;AACA,MAAMU,MAAM,GAAG,WAAf;AACA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,KAAK,GAAG,CAAd;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,OAAO,CAAC,EAAD,CAAP;;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQR,KAAK,CAACe,GAAN,uDAA8DF,IAA9D,SAAsEC,KAAtE,aACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACTjB,gBAAAA,KAAK,CAACe,GAAN,uDAA8DD,KAA9D,SAAuED,IAAvE,aACCG,IADD,CACM,UAAAE,IAAI,EAAI;AACV,sBAAIC,aAAa,GAAG,EAApB;AACAD,kBAAAA,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAeC,OAAf,CAAuB,UAAAC,OAAO,EAAI;AAC9B,wBAAIC,SAAS,GAAG;AACZ,6BAAO,KAAKC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CADA;AAEZ,mCAAaL,OAAO,CAACM,UAFT;AAGZ,8BAAQN,OAAO,CAACO;AAHJ,qBAAhB;AAKAV,oBAAAA,aAAa,CAACW,IAAd,CAAmBP,SAAnB;AACH,mBAPD;AAQAN,kBAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsB,UAAAC,OAAO,EAAI;AAC7B,wBAAIC,SAAS,GAAG;AACZ,6BAAO,KAAKC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CADA;AAEZ,mCAAaL,OAAO,CAACM,UAFT;AAGZ,8BAAQN,OAAO,CAACO,OAHJ;AAIZ,8BAAO;AAJK,qBAAhB;AAMAV,oBAAAA,aAAa,CAACW,IAAd,CAAmBP,SAAnB;AACH,mBARD;AASA,sBAAIQ,IAAI,GAAGZ,aAAa,CAACa,IAAd,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,SAAX,EAAsBC,OAAtB,KAAkC,IAAIF,IAAJ,CAASF,CAAC,CAACG,SAAX,EAAsBC,OAAtB,EAA5C;AAAA,mBAAnB,CAAX;AACA7B,kBAAAA,OAAO,CAACuB,IAAD,CAAP;AACH,iBAtBD,EAuBCO,KAvBD,CAuBO,UAAAC,KAAK;AAAA,yBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,iBAvBZ;AAwBH,eA1BI,EA2BJD,KA3BI,CA2BE,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,eA3BP,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAgCA5B,IAAAA,MAAM,CAAC+B,EAAP,CAAU,QAAV,EAAoB,UAAUtB,IAAV,EAAgB;AAChC,UAAIA,IAAI,CAACuB,OAAL,IAAgB9B,IAAhB,IAAwBO,IAAI,CAACwB,OAAL,IAAgB9B,KAA5C,EAAmD;AAC/C,YAAIM,IAAI,CAACyB,MAAL,KAAgB,IAApB,EAA0B;AACtBnC,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SAFD,MAEO;AACHA,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;AACJ,KARD;AASAC,IAAAA,MAAM,CAAC+B,EAAP,CAAU,QAAV,EAAoB,UAAUtB,IAAV,EAAgB;AAChC,UAAIA,IAAI,CAACuB,OAAL,IAAgB9B,IAAhB,IAAwBO,IAAI,CAACwB,OAAL,IAAgB9B,KAA5C,EAAmD;AAC/C,YAAIS,SAAS,GAAG;AACZ,iBAAO,KAAKC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CADA;AAEZ,uBAAa,IAAIQ,IAAJ,EAFD;AAGZ,kBAAQf,IAAI,CAACS,OAHD;AAIZ,kBAAQ;AACJ,mBAAOT,IAAI,CAACwB,OADR;AAEJ,sBAAU,EAFN;AAGJ,oBAAQxB,IAAI,CAAC0B;AAHT;AAJI,SAAhB;AAUAtC,QAAAA,OAAO,CAAC,UAAAuC,SAAS;AAAA,iBAAI9C,UAAU,CAAC+C,MAAX,CAAkBD,SAAlB,EAA6BxB,SAA7B,CAAJ;AAAA,SAAV,CAAP;AACH;AACJ,KAdD;AAeH,GA1DQ,EA0DN,EA1DM,CAAT;;AA2DA,MAAM0B,OAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AACxB1C,IAAAA,OAAO,CAAC,UAAAuC,SAAS;AAAA,aAAI9C,UAAU,CAAC+C,MAAX,CAAkBD,SAAlB,EAA6BG,OAA7B,CAAJ;AAAA,KAAV,CAAP;AACA,QAAIC,UAAU,GAAG;AACbP,MAAAA,OAAO,EAAE/B,IADI;AAEbiC,MAAAA,QAAQ,EAAE,WAFG;AAGbH,MAAAA,OAAO,EAAE7B,KAHI;AAIbe,MAAAA,OAAO,EAAEqB,OAAO,CAAC,CAAD,CAAP,CAAWE,IAJP;AAKbC,MAAAA,KAAK,EAAE,EALM;AAMbC,MAAAA,MAAM,EAAE;AANK,KAAjB;AASA3C,IAAAA,MAAM,CAAC4C,IAAP,CAAY,UAAZ,EAAwBJ,UAAxB;AACH,GAZD;;AAaA,MAAIK,OAAJ;;AACA,WAASC,eAAT,GAA2B;AACvB,QAAIC,IAAI,GAAG;AACPf,MAAAA,OAAO,EAAE7B,KADF;AAEP8B,MAAAA,OAAO,EAAE/B,IAFF;AAGPgC,MAAAA,MAAM,EAAE;AAHD,KAAX;AAKAlC,IAAAA,MAAM,CAAC4C,IAAP,CAAY,WAAZ,EAAyBG,IAAzB;AACH;;AAED,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAID,IAAI,GAAG;AACPf,MAAAA,OAAO,EAAE7B,KADF;AAEP8B,MAAAA,OAAO,EAAE/B,IAFF;AAGPgC,MAAAA,MAAM,EAAE;AAHD,KAAX;AAKAlC,IAAAA,MAAM,CAAC4C,IAAP,CAAY,WAAZ,EAAyBG,IAAzB;AACAE,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGK,UAAU,CAACJ,eAAD,EAAkB,IAAlB,CAApB;AACH,GATD;;AAYA,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEK,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAE,IADd;AAEI,IAAA,QAAQ,EAAExD,IAFd;AAGI,IAAA,QAAQ,EAAEE,QAHd;AAII,IAAA,gBAAgB,EAAE,IAJtB;AAKI,IAAA,uBAAuB,EAAE,IAL7B;AAMI,IAAA,YAAY,EAAE;AAAA,aAAM,IAAN;AAAA,KANlB;AAOI,IAAA,yBAAyB,EAAE,IAP/B;AAQI,IAAA,kBAAkB,EAAE;AAAA,aAAMkD,QAAQ,EAAd;AAAA,KARxB;AASI,IAAA,MAAM,EAAE,gBAAAK,WAAW;AAAA,aAAIf,OAAM,CAACe,WAAD,CAAV;AAAA,KATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAkBH;AACD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Text, FlatList, TouchableOpacity, View, TextInput, StyleSheet, ScrollView } from 'react-native'\r\nimport { SafeAreaView } from 'react-navigation'\r\nimport COLORS from '../../consts/Colors'\r\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport { useNavigation } from '../../utils/useNavigation';\r\nimport HeaderTitle from '../../components/HeaderTitle';\r\nimport axios from 'axios';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport io from \"socket.io-client\";\r\n\r\nlet user_avatar: any = undefined;\r\nexport default function Chat(props: any) {\r\n    const [mess, setMess] = useState([])\r\n    const [isTyping, setIsTyping] = useState(false)\r\n    const socket = io(\"http://192.168.1.93:3002\");\r\n    const myName = 'Hoàng Anh';\r\n    const myID = 1;\r\n    const hisID = 2;\r\n    useEffect(() => {\r\n        setMess([]);\r\n        (async()=>{\r\n           await axios.get(`http://192.168.1.93:3002/api/chat/getChatHistory/${myID}/${hisID}/1/100`)\r\n            .then(res => {\r\n                axios.get(`http://192.168.1.93:3002/api/chat/getChatHistory/${hisID}/${myID}/1/100`)\r\n                .then(res2 => {\r\n                    let data_chat_all = [];\r\n                    res2.data.data.forEach(element => {\r\n                        let dataMesss = {\r\n                            \"_id\": '' + Math.random().toString(36).substr(2, 16),\r\n                            \"createdAt\": element.CreateDate,\r\n                            \"text\": element.message,\r\n                        }\r\n                        data_chat_all.push(dataMesss);\r\n                    });\r\n                    res.data.data.forEach(element => {\r\n                        let dataMesss = {\r\n                            \"_id\": '' + Math.random().toString(36).substr(2, 16),\r\n                            \"createdAt\": element.CreateDate,\r\n                            \"text\": element.message,\r\n                            \"user\":{},\r\n                        }\r\n                        data_chat_all.push(dataMesss);\r\n                    });\r\n                    let temp = data_chat_all.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\r\n                    setMess(temp);\r\n                })\r\n                .catch(error => console.log(error));\r\n            })\r\n            .catch(error => console.log(error));\r\n            \r\n        })()\r\n       \r\n        socket.on(\"typing\", function (data) {\r\n            if (data.user_to == myID && data.user_id == hisID) {\r\n                if (data.status === true) {\r\n                    setIsTyping(true);\r\n                } else {\r\n                    setIsTyping(false);\r\n                }\r\n            }\r\n        });\r\n        socket.on(\"thread\", function (data) {\r\n            if (data.user_to == myID && data.user_id == hisID) {\r\n                let dataMesss = {\r\n                    \"_id\": '' + Math.random().toString(36).substr(2, 16),\r\n                    \"createdAt\": new Date,\r\n                    \"text\": data.message,\r\n                    \"user\": {\r\n                        \"_id\": data.user_id,\r\n                        \"avatar\": \"\",\r\n                        \"name\": data.username,\r\n                    },\r\n                }\r\n                setMess(prevState => GiftedChat.append(prevState, dataMesss))\r\n            }\r\n        });\r\n    }, []);\r\n    const onSend = (messNew) => {\r\n        setMess(prevState => GiftedChat.append(prevState, messNew))\r\n        var msgDetails = {\r\n            user_id: myID,\r\n            username: 'Hoàng Anh',\r\n            user_to: hisID,\r\n            message: messNew[0].text,\r\n            image: '',\r\n            base64: ''\r\n        };\r\n\r\n        socket.emit(\"messages\", msgDetails);\r\n    }\r\n    var timeout;\r\n    function timeoutFunction() {\r\n        var typo = {\r\n            user_to: hisID,\r\n            user_id: myID,\r\n            status: false\r\n        }\r\n        socket.emit(\"is_typing\", typo);\r\n    }\r\n\r\n    const keyPress = () => {\r\n        var typo = {\r\n            user_to: hisID,\r\n            user_id: myID,\r\n            status: true\r\n        }\r\n        socket.emit(\"is_typing\", typo);\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(timeoutFunction, 2000);\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <HeaderTitle title={'Chat'} />\r\n            <GiftedChat\r\n                inverted={true}\r\n                messages={mess}\r\n                isTyping={isTyping}\r\n                isLoadingEarlier={true}\r\n                renderUsernameOnMessage={true}\r\n                renderAvatar={() => null}\r\n                showAvatarForEveryMessage={true}\r\n                onInputTextChanged={() => keyPress()}\r\n                onSend={newMessages => onSend(newMessages)}\r\n            />\r\n\r\n        </SafeAreaView>\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#E5E5E5'\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}