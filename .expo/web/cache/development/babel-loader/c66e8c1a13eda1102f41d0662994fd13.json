{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Cart.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CartCard from \"../components/CartCard\";\nimport { Button } from 'react-native-elements';\nimport COLORS from \"../consts/Colors\";\nimport { SafeAreaView } from 'react-navigation';\nimport HeaderTitle from \"../components/HeaderTitle\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport { withNavigationFocus } from 'react-navigation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCart, updateCart } from \"../redux/actions/cartActions\";\nvar check = true;\n\nvar Cart = function Cart(props) {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n  var cart = cartState.cart;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartItem = _useState2[0],\n      setCartItem = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var onTapCheckout = function onTapCheckout() {\n    navigate('Checkout');\n  };\n\n  useEffect(function () {\n    if (cart && !isLoading) {\n      setIsLoading(true);\n    }\n  }, [cartState]);\n\n  if (check) {\n    dispatch(getCart());\n    check = false;\n  } else {\n    check = true;\n  }\n\n  var onTap = function onTap(id, qty) {\n    setIsLoading(false);\n    dispatch(updateCart(id, qty));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, cart ? !isLoading ? React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"\\u0110ang s\\u1EED l\\xFD y\\xEAu c\\u1EA7u\")) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, React.createElement(HeaderTitle, {\n    title: 'Giỏ Hàng',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }), React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }, cart && cart.cart && cart.cart.map(function (cart, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 57\n      }\n    }, React.createElement(CartCard, {\n      qty: cart.qty,\n      product: cart.product,\n      onTap: onTap,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 61\n      }\n    }));\n  }))), React.createElement(View, {\n    style: styles.bill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.txtTotal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, \"Totals\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 23\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }, \"Sub total :\"), React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 23\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 45\n    }\n  }, cart && cart.sub_price, \"\\u0111\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: 'space-between',\n      borderBottomColor: 'gray',\n      borderBottomWidth: 1,\n      paddingBottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 23\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 45\n    }\n  }, \"Ship total :\"), React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 23\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  }, cart && cart.ship, \"\\u0111\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 25\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, \"Total Price :\"), React.createElement(Text, {\n    style: [styles.priceTitle, {\n      fontSize: 25\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, cart && cart.total_price, \"\\u0111\")), React.createElement(Button, {\n    onPress: onTapCheckout,\n    title: \"CHECK OUT\",\n    buttonStyle: styles.btnCheckOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  })))) : React.createElement(SafeAreaView, {\n    style: [styles.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, React.createElement(HeaderTitle, {\n    title: 'giỏ hàng',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 400,\n      height: 400\n    },\n    source: require(\"../images/cart_empty.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"Hi\\u1EC7n t\\u1EA1i ch\\u01B0a c\\xF3 s\\u1EA3n ph\\u1EA9m trong gi\\u1ECF h\\xE0ng\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  bill: {\n    flexDirection: 'column',\n    margin: 10,\n    backgroundColor: '#E5E5E5',\n    padding: 15,\n    borderRadius: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 4\n  },\n  priceTitle: {\n    fontWeight: '600',\n    color: '#111'\n  },\n  txtTotal: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  btnCheckOut: {\n    marginTop: 20,\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    padding: 10\n  }\n});\nexport default withNavigationFocus(Cart);","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Cart.tsx"],"names":["React","useState","useEffect","CartCard","Button","COLORS","SafeAreaView","HeaderTitle","useNavigation","withNavigationFocus","useDispatch","useSelector","getCart","updateCart","check","Cart","props","navigate","navigation","route","cartState","state","cartReducer","cart","cartItem","setCartItem","isLoading","setIsLoading","dispatch","onTapCheckout","onTap","id","qty","styles","container","justifyContent","alignItems","flex","marginBottom","map","index","product","bill","txtTotal","flexDirection","priceTitle","fontSize","sub_price","borderBottomColor","borderBottomWidth","paddingBottom","ship","total_price","btnCheckOut","width","height","require","color","StyleSheet","create","backgroundColor","margin","padding","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontWeight","textAlign","marginTop","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity, FlatList } from 'react-native';\r\nimport CartCard from '../components/CartCard';\r\nimport { Button } from 'react-native-elements';\r\nimport COLORS from '../consts/Colors';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport HeaderTitle from '../components/HeaderTitle';\r\nimport { useNavigation } from '../utils/useNavigation';\r\nimport { CartItemModel, CartModel, State } from '../redux';\r\nimport axios from 'axios';\r\nimport { cansa } from '../consts/Selector';\r\nimport { withNavigationFocus } from 'react-navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCart, updateCart } from '../redux/actions/cartActions';\r\n\r\n\r\nlet check = true;\r\n\r\nconst Cart = (props: any) => {\r\n    const { navigate } = useNavigation();\r\n    const { navigation, route } = props;\r\n    const cartState = useSelector((state: State) => state.cartReducer);\r\n    const { cart } = cartState;\r\n    let [cartItem, setCartItem] = useState([]);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTapCheckout = () => {\r\n        navigate('Checkout')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cart && !isLoading) {\r\n            setIsLoading(true);\r\n        }\r\n    }, [cartState])\r\n\r\n    if (check) {\r\n        dispatch(getCart());\r\n        check = false;\r\n    } else {\r\n        check = true;\r\n    }\r\n\r\n    const onTap = (id: number, qty: number) => {\r\n        setIsLoading(false);\r\n        dispatch(updateCart(id, qty));\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            {\r\n                cart ?\r\n                    (\r\n                        !isLoading ?\r\n                            <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1 }}>\r\n                                <Text style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                                    Đang sử lý yêu cầu\r\n                                </Text>\r\n                            </View>\r\n                            :\r\n                            <View style={styles.container}>\r\n                                <HeaderTitle title={'Giỏ Hàng'} />\r\n\r\n                                <ScrollView style={{ flex: 1 }} showsVerticalScrollIndicator={false}>\r\n                                    <View style={{ flex: 1, marginBottom: 10 }}>\r\n                                        <ScrollView>\r\n                                            {\r\n                                                cart && cart.cart && cart.cart.map((cart: CartItemModel, index: number) => {\r\n                                                    return (\r\n                                                        < View key={index} >\r\n                                                            <CartCard qty={cart.qty} product={cart.product} onTap={onTap} />\r\n                                                        </View>)\r\n                                                })\r\n                                            }\r\n                                        </ScrollView>\r\n                                    </View>\r\n                                    <View style={styles.bill}>\r\n                                        <Text style={styles.txtTotal}>Totals</Text>\r\n                                        <View style={{ flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 23 }]}>Sub total :</Text>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 23 }]}>{cart && cart.sub_price}đ</Text>\r\n                                        </View>\r\n                                        <View style={{ flexDirection: \"row\", justifyContent: 'space-between', borderBottomColor: 'gray', borderBottomWidth: 1, paddingBottom: 5 }}>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 23 }]}>Ship total :</Text>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 23 }]}>{cart && cart.ship}đ</Text>\r\n                                        </View>\r\n                                        <View style={{ flexDirection: \"row\", justifyContent: 'space-between' }}>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 25 }]}>Total Price :</Text>\r\n                                            <Text style={[styles.priceTitle, { fontSize: 25 }]}>{cart && cart.total_price}đ</Text>\r\n                                        </View>\r\n                                        <Button\r\n                                            onPress={onTapCheckout}\r\n                                            title=\"CHECK OUT\"\r\n                                            buttonStyle={styles.btnCheckOut}\r\n                                        />\r\n                                    </View>\r\n                                </ScrollView>\r\n                            </View >\r\n                    )\r\n                    :\r\n                    (\r\n                        <SafeAreaView style={[styles.container]}>\r\n                            <HeaderTitle title={'giỏ hàng'} />\r\n                            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Image style={{ width: 400, height: 400 }} source={require('../images/cart_empty.png')} />\r\n                                <Text style={{ fontSize: 18, color: 'gray' }}>Hiện tại chưa có sản phẩm trong giỏ hàng</Text>\r\n                            </View>\r\n                        </SafeAreaView>\r\n                    )\r\n\r\n            }\r\n        </SafeAreaView>\r\n    )\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    bill: {\r\n        flexDirection: 'column',\r\n        margin: 10,\r\n        backgroundColor: '#E5E5E5',\r\n        padding: 15,\r\n        borderRadius: 15,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n        shadowOpacity: 0.29,\r\n        shadowRadius: 4.65,\r\n        elevation: 4,\r\n    },\r\n    priceTitle: {\r\n        fontWeight: '600',\r\n        color: '#111'\r\n    },\r\n    txtTotal: {\r\n        fontSize: 28,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left'\r\n    },\r\n    btnCheckOut: {\r\n        marginTop: 20,\r\n        backgroundColor: COLORS.primary,\r\n        borderRadius: 15,\r\n        padding: 10\r\n    }\r\n});\r\n\r\nexport default withNavigationFocus(Cart);"]},"metadata":{},"sourceType":"module"}