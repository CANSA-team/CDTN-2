{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React_mobile_brand\\\\CDTN-2\\\\src\\\\screens\\\\Categories.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SafeAreaView } from 'react-navigation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Category from \"../components/Category\";\nimport CategorySub from \"../components/CategorySub\";\nimport SearchBarTop from \"../components/SearchBarTop\";\nimport { getCategory } from \"../redux\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport COLORS from \"./../consts/Colors\";\nexport default function Categories() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      catergoryIndex = _useState2[0],\n      setCategoryIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var categoryState = useSelector(function (state) {\n    return state.categoryReducer;\n  });\n  var categories = categoryState.categories;\n  var dispatch = useDispatch();\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var searchProduct = function searchProduct(data) {\n    navigate('Search', {\n      data: data,\n      title: 'Tìm kiếm'\n    });\n  };\n\n  useEffect(function () {\n    dispatch(getCategory());\n  }, []);\n  useEffect(function () {\n    if (categories) {\n      setIsLoading(true);\n    }\n  }, [categoryState]);\n\n  var onTap = function onTap(id, title) {\n    navigate('Search', {\n      data: id,\n      title: title\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(SearchBarTop, {\n    onSearch: searchProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), !isLoading ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#00ff00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })) : React.createElement(View, {\n    style: styles.categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.categoriesRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, categories && categories.map(function (category, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, React.createElement(Category, {\n      style: {\n        marginBottom: 10,\n        padding: 2,\n        flex: 1\n      },\n      item: category,\n      index: index,\n      catergoryIndex: catergoryIndex,\n      onTap: function onTap() {\n        return setCategoryIndex(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 45\n      }\n    }));\n  })), React.createElement(View, {\n    style: styles.categoriesLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, categories && categories[catergoryIndex].categories.map(function (category, index) {\n    return React.createElement(View, {\n      key: index,\n      style: {\n        flex: 1,\n        minWidth: '30%',\n        marginBottom: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }, React.createElement(CategorySub, {\n      style: {\n        marginBottom: 30,\n        flex: 1,\n        marginLeft: 5,\n        padding: 2\n      },\n      item: category,\n      onTap: onTap,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }\n    }));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary\n  },\n  searchContainer: {\n    marginTop: 30\n  },\n  categories: {\n    flexDirection: 'row',\n    flex: 1,\n    marginTop: 20,\n    borderTopColor: '#ccc',\n    borderTopWidth: 1\n  },\n  categoriesRight: {\n    flex: 1,\n    flexDirection: 'column',\n    padding: 5,\n    justifyContent: 'flex-start',\n    backgroundColor: '#e7f0ee',\n    borderRightColor: '#ccc',\n    borderRightWidth: 1\n  },\n  categoriesLeft: {\n    flex: 3,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    padding: 10,\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"sources":["E:/React_mobile_brand/CDTN-2/src/screens/Categories.tsx"],"names":["React","useState","useEffect","SafeAreaView","useDispatch","useSelector","Category","CategorySub","SearchBarTop","getCategory","useNavigation","COLORS","Categories","catergoryIndex","setCategoryIndex","isLoading","setIsLoading","categoryState","state","categoryReducer","categories","dispatch","navigate","searchProduct","data","title","onTap","id","styles","container","searchContainer","categoriesRight","map","category","index","marginBottom","padding","flex","categoriesLeft","minWidth","marginLeft","StyleSheet","create","backgroundColor","primary","marginTop","flexDirection","borderTopColor","borderTopWidth","justifyContent","borderRightColor","borderRightWidth","flexWrap"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { View, Text, StyleSheet, FlatList, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Category from '../components/Category';\r\nimport CategorySub from '../components/CategorySub';\r\nimport SearchBarTop from '../components/SearchBarTop';\r\nimport {getCategory, State } from '../redux';\r\nimport { useNavigation } from '../utils/useNavigation';\r\nimport COLORS from './../consts/Colors';\r\n\r\nexport default function Categories() {\r\n    const [catergoryIndex, setCategoryIndex] = useState(0);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const categoryState = useSelector((state: State) => state.categoryReducer);\r\n    const { categories } = categoryState;\r\n    const dispatch = useDispatch();\r\n    const { navigate } = useNavigation();\r\n    const searchProduct = (data: any) => {\r\n        navigate('Search', { data:data,title:'Tìm kiếm' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategory());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(categories){\r\n            setIsLoading(true);\r\n        }\r\n    },[categoryState])\r\n\r\n    const onTap = (id:number,title:string) => {\r\n        navigate('Search', { data:id,title:title })\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.searchContainer}>\r\n                <SearchBarTop onSearch={searchProduct} />\r\n            </View>\r\n            {\r\n                !isLoading ?\r\n                    (<View style={styles.container}>\r\n                        <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n                    </View>) :\r\n                    (\r\n                        <View style={styles.categories}>\r\n                            <View style={styles.categoriesRight}>\r\n                                {\r\n                                    categories && categories!.map((category, index) => (\r\n                                        <View key={index}>\r\n                                            <Category style={{ marginBottom: 10, padding: 2, flex: 1 }} item={category} index={index} catergoryIndex={catergoryIndex} onTap={() => setCategoryIndex(index)} />\r\n                                        </View>\r\n                                    ))\r\n                                }\r\n                            </View>\r\n                            <View style={styles.categoriesLeft}>\r\n                                {\r\n                                    categories && categories![catergoryIndex].categories!.map((category, index) => (\r\n                                        <View key={index} style={{ flex: 1, minWidth: '30%',marginBottom:20  }}>\r\n                                            <CategorySub style={{ marginBottom: 30, flex: 1, marginLeft: 5, padding: 2 }} item={category} onTap={onTap}/>\r\n                                        </View>\r\n                                    ))\r\n                                }\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: COLORS.primary,\r\n    },\r\n    searchContainer: {\r\n        marginTop: 30\r\n    },\r\n    categories: {\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        marginTop: 20,\r\n        borderTopColor: '#ccc',\r\n        borderTopWidth: 1\r\n    },\r\n    categoriesRight: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        padding: 5,\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#e7f0ee',\r\n        borderRightColor: '#ccc',\r\n        borderRightWidth: 1\r\n    },\r\n    categoriesLeft: {\r\n        flex: 3,\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        padding: 10,\r\n        flexWrap:'wrap' \r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}